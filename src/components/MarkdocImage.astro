---
import { Picture } from "astro:assets";

interface Props {
    src: string;
    alt: string;
    widths?: number[];
    sizes?: string;
    height: number;
    caption: string;
}

const images = import.meta.glob<{ default: ImageMetadata }>(
    "/src/assets/img/**/*.{jpeg,jpg,png,gif}",
);

const { src, alt, caption } = Astro.props;
let assetPath = src.replace(/^[@\/]img/, "/src/assets/img");

if (!images[assetPath]) {
    throw new Error(`Image not found: ${assetPath}`);
}

const image = images[assetPath]();
let { widths, sizes } = Astro.props;

if (!widths) {
    widths = [600, 800, 1000, image.width];
}

if (!sizes) {
    sizes = "";
    for (let i = 0; i < widths.length; i++) {
        sizes += `(max-width: ${widths[i]}px) ${widths[i]}px, `;
    }
    sizes += `${image.width}px`;
}
---

<figure>
    <Picture src={image} {alt} {widths} {sizes} formats={["avif", "webp"]} />
    {caption && <figcaption>{caption}</figcaption>}
</figure>

<style type="text/scss">
    img {
        height: auto;
        margin: auto;
        max-width: 100%;
        object-fit: cover;
        border-radius: var(--radius-2);

        @container (min-width: 800px) {
            max-width: 1000px;
        }

        @container (min-width: 1000px) {
            max-width: 1200px;
        }

        @container (min-width: 1200px) {
            max-width: 1000px;
        }
    }
</style>
